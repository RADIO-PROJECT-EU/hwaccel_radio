// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

// AXI_Lite_RGB_1_N
// 0x00 : Control signals
//        bit 0  - ap_start (Read/Write/COH)
//        bit 1  - ap_done (Read/COR)
//        bit 2  - ap_idle (Read)
//        bit 3  - ap_ready (Read)
//        bit 7  - auto_restart (Read/Write)
//        others - reserved
// 0x04 : Global Interrupt Enable Register
//        bit 0  - Global Interrupt Enable (Read/Write)
//        others - reserved
// 0x08 : IP Interrupt Enable Register (Read/Write)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x0c : IP Interrupt Status Register (Read/TOW)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x10 : Data signal of rgb1_in
//        bit 31~0 - rgb1_in[31:0] (Read/Write)
// 0x14 : reserved
// 0x18 : Data signal of n_Mat_out
//        bit 31~0 - n_Mat_out[31:0] (Read/Write)
// 0x1c : reserved
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XSQUARE_CHECK_AXI_LITE_RGB_1_N_ADDR_AP_CTRL        0x00
#define XSQUARE_CHECK_AXI_LITE_RGB_1_N_ADDR_GIE            0x04
#define XSQUARE_CHECK_AXI_LITE_RGB_1_N_ADDR_IER            0x08
#define XSQUARE_CHECK_AXI_LITE_RGB_1_N_ADDR_ISR            0x0c
#define XSQUARE_CHECK_AXI_LITE_RGB_1_N_ADDR_RGB1_IN_DATA   0x10
#define XSQUARE_CHECK_AXI_LITE_RGB_1_N_BITS_RGB1_IN_DATA   32
#define XSQUARE_CHECK_AXI_LITE_RGB_1_N_ADDR_N_MAT_OUT_DATA 0x18
#define XSQUARE_CHECK_AXI_LITE_RGB_1_N_BITS_N_MAT_OUT_DATA 32

// AXI_Lite_RGB_2
// 0x00 : reserved
// 0x04 : reserved
// 0x08 : reserved
// 0x0c : reserved
// 0x10 : Data signal of rgb2_in
//        bit 31~0 - rgb2_in[31:0] (Read/Write)
// 0x14 : reserved
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XSQUARE_CHECK_AXI_LITE_RGB_2_ADDR_RGB2_IN_DATA 0x10
#define XSQUARE_CHECK_AXI_LITE_RGB_2_BITS_RGB2_IN_DATA 32

